package com.hnjca.wechat.wxsweep;

/**
 * Description:
 * User: Ellison
 * Date: 2019-06-19
 * Time: 10:20
 * Modified:
 */
public class CRC16 {
    static byte[] crc16_tab_h = { (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0,
            (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1,
            (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0,
            (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0,
            (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x01, (byte) 0xC0, (byte) 0x80, (byte) 0x41, (byte) 0x00, (byte) 0xC1, (byte) 0x81, (byte) 0x40 };

    static byte[] crc16_tab_l = { (byte) 0x00, (byte) 0xC0, (byte) 0xC1, (byte) 0x01, (byte) 0xC3, (byte) 0x03, (byte) 0x02, (byte) 0xC2, (byte) 0xC6, (byte) 0x06, (byte) 0x07, (byte) 0xC7, (byte) 0x05, (byte) 0xC5, (byte) 0xC4, (byte) 0x04, (byte) 0xCC, (byte) 0x0C, (byte) 0x0D, (byte) 0xCD, (byte) 0x0F, (byte) 0xCF, (byte) 0xCE, (byte) 0x0E, (byte) 0x0A, (byte) 0xCA, (byte) 0xCB, (byte) 0x0B, (byte) 0xC9, (byte) 0x09, (byte) 0x08, (byte) 0xC8, (byte) 0xD8, (byte) 0x18, (byte) 0x19, (byte) 0xD9, (byte) 0x1B, (byte) 0xDB, (byte) 0xDA, (byte) 0x1A, (byte) 0x1E, (byte) 0xDE, (byte) 0xDF, (byte) 0x1F, (byte) 0xDD, (byte) 0x1D, (byte) 0x1C, (byte) 0xDC, (byte) 0x14, (byte) 0xD4, (byte) 0xD5, (byte) 0x15, (byte) 0xD7, (byte) 0x17, (byte) 0x16, (byte) 0xD6, (byte) 0xD2, (byte) 0x12,
            (byte) 0x13, (byte) 0xD3, (byte) 0x11, (byte) 0xD1, (byte) 0xD0, (byte) 0x10, (byte) 0xF0, (byte) 0x30, (byte) 0x31, (byte) 0xF1, (byte) 0x33, (byte) 0xF3, (byte) 0xF2, (byte) 0x32, (byte) 0x36, (byte) 0xF6, (byte) 0xF7, (byte) 0x37, (byte) 0xF5, (byte) 0x35, (byte) 0x34, (byte) 0xF4, (byte) 0x3C, (byte) 0xFC, (byte) 0xFD, (byte) 0x3D, (byte) 0xFF, (byte) 0x3F, (byte) 0x3E, (byte) 0xFE, (byte) 0xFA, (byte) 0x3A, (byte) 0x3B, (byte) 0xFB, (byte) 0x39, (byte) 0xF9, (byte) 0xF8, (byte) 0x38, (byte) 0x28, (byte) 0xE8, (byte) 0xE9, (byte) 0x29, (byte) 0xEB, (byte) 0x2B, (byte) 0x2A, (byte) 0xEA, (byte) 0xEE, (byte) 0x2E, (byte) 0x2F, (byte) 0xEF, (byte) 0x2D, (byte) 0xED, (byte) 0xEC, (byte) 0x2C, (byte) 0xE4, (byte) 0x24, (byte) 0x25, (byte) 0xE5, (byte) 0x27, (byte) 0xE7,
            (byte) 0xE6, (byte) 0x26, (byte) 0x22, (byte) 0xE2, (byte) 0xE3, (byte) 0x23, (byte) 0xE1, (byte) 0x21, (byte) 0x20, (byte) 0xE0, (byte) 0xA0, (byte) 0x60, (byte) 0x61, (byte) 0xA1, (byte) 0x63, (byte) 0xA3, (byte) 0xA2, (byte) 0x62, (byte) 0x66, (byte) 0xA6, (byte) 0xA7, (byte) 0x67, (byte) 0xA5, (byte) 0x65, (byte) 0x64, (byte) 0xA4, (byte) 0x6C, (byte) 0xAC, (byte) 0xAD, (byte) 0x6D, (byte) 0xAF, (byte) 0x6F, (byte) 0x6E, (byte) 0xAE, (byte) 0xAA, (byte) 0x6A, (byte) 0x6B, (byte) 0xAB, (byte) 0x69, (byte) 0xA9, (byte) 0xA8, (byte) 0x68, (byte) 0x78, (byte) 0xB8, (byte) 0xB9, (byte) 0x79, (byte) 0xBB, (byte) 0x7B, (byte) 0x7A, (byte) 0xBA, (byte) 0xBE, (byte) 0x7E, (byte) 0x7F, (byte) 0xBF, (byte) 0x7D, (byte) 0xBD, (byte) 0xBC, (byte) 0x7C, (byte) 0xB4, (byte) 0x74,
            (byte) 0x75, (byte) 0xB5, (byte) 0x77, (byte) 0xB7, (byte) 0xB6, (byte) 0x76, (byte) 0x72, (byte) 0xB2, (byte) 0xB3, (byte) 0x73, (byte) 0xB1, (byte) 0x71, (byte) 0x70, (byte) 0xB0, (byte) 0x50, (byte) 0x90, (byte) 0x91, (byte) 0x51, (byte) 0x93, (byte) 0x53, (byte) 0x52, (byte) 0x92, (byte) 0x96, (byte) 0x56, (byte) 0x57, (byte) 0x97, (byte) 0x55, (byte) 0x95, (byte) 0x94, (byte) 0x54, (byte) 0x9C, (byte) 0x5C, (byte) 0x5D, (byte) 0x9D, (byte) 0x5F, (byte) 0x9F, (byte) 0x9E, (byte) 0x5E, (byte) 0x5A, (byte) 0x9A, (byte) 0x9B, (byte) 0x5B, (byte) 0x99, (byte) 0x59, (byte) 0x58, (byte) 0x98, (byte) 0x88, (byte) 0x48, (byte) 0x49, (byte) 0x89, (byte) 0x4B, (byte) 0x8B, (byte) 0x8A, (byte) 0x4A, (byte) 0x4E, (byte) 0x8E, (byte) 0x8F, (byte) 0x4F, (byte) 0x8D, (byte) 0x4D,
            (byte) 0x4C, (byte) 0x8C, (byte) 0x44, (byte) 0x84, (byte) 0x85, (byte) 0x45, (byte) 0x87, (byte) 0x47, (byte) 0x46, (byte) 0x86, (byte) 0x82, (byte) 0x42, (byte) 0x43, (byte) 0x83, (byte) 0x41, (byte) 0x81, (byte) 0x80, (byte) 0x40 };


    static byte[] crc16_tab_2= {                                                           // 公式为0x1021
            (byte) 0x0000, (byte) 0x1021, (byte) 0x2042,(byte)  0x3063, (byte) 0x4084, (byte) 0x50a5, (byte) 0x60c6, (byte) 0x70e7,
            (byte) 0x8108, (byte) 0x9129, (byte) 0xa14a, (byte) 0xb16b, (byte) 0xc18c, (byte) 0xd1ad, (byte) 0xe1ce, (byte) 0xf1ef,
            (byte) 0x1231, (byte) 0x0210, (byte) 0x3273, (byte) 0x2252, (byte) 0x52b5, (byte) 0x4294, (byte) 0x72f7, (byte) 0x62d6,
            (byte) 0x9339, (byte) 0x8318, (byte) 0xb37b, (byte) 0xa35a, (byte) 0xd3bd, (byte) 0xc39c, (byte) 0xf3ff, (byte) 0xe3de,
            (byte) 0x2462, (byte) 0x3443, (byte) 0x0420, (byte) 0x1401, (byte) 0x64e6, (byte) 0x74c7, (byte) 0x44a4, (byte) 0x5485,
            (byte) 0xa56a, (byte) 0xb54b, (byte) 0x8528, (byte) 0x9509, (byte) 0xe5ee, (byte) 0xf5cf, (byte) 0xc5ac, (byte) 0xd58d,
            (byte) 0x3653, (byte) 0x2672, (byte) 0x1611, (byte) 0x0630, (byte) 0x76d7, (byte) 0x66f6, (byte) 0x5695, (byte) 0x46b4,
            (byte) 0xb75b, (byte) 0xa77a, (byte) 0x9719, (byte) 0x8738, (byte) 0xf7df, (byte) 0xe7fe, (byte) 0xd79d, (byte) 0xc7bc,
            (byte)  0x48c4,(byte) 0x58e5, (byte) 0x6886, (byte) 0x78a7,(byte)  0x0840, (byte) 0x1861, (byte) 0x2802, (byte) 0x3823,
            (byte) 0xc9cc, (byte) 0xd9ed, (byte) 0xe98e, (byte) 0xf9af, (byte) 0x8948, (byte) 0x9969, (byte) 0xa90a, (byte) 0xb92b,
            (byte) 0x5af5, (byte) 0x4ad4, (byte) 0x7ab7, (byte) 0x6a96, (byte) 0x1a71, (byte) 0x0a50, (byte) 0x3a33, (byte) 0x2a12,
            (byte)  0xdbfd,(byte) 0xcbdc, (byte)  0xfbbf,(byte) 0xeb9e, (byte) 0x9b79, (byte) 0x8b58, (byte) 0xbb3b, (byte) 0xab1a,
            (byte) 0x6ca6, (byte) 0x7c87, (byte) 0x4ce4, (byte) 0x5cc5, (byte) 0x2c22, (byte) 0x3c03, (byte) 0x0c60, (byte) 0x1c41,
            (byte) 0xedae, (byte) 0xfd8f, (byte) 0xcdec, (byte) 0xddcd, (byte) 0xad2a, (byte) 0xbd0b, (byte) 0x8d68, (byte) 0x9d49,
            (byte) 0x7e97, (byte) 0x6eb6, (byte) 0x5ed5, (byte) 0x4ef4, (byte) 0x3e13, (byte) 0x2e32, (byte) 0x1e51, (byte) 0x0e70,
            (byte) 0xff9f, (byte) 0xefbe, (byte) 0xdfdd, (byte) 0xcffc, (byte) 0xbf1b, (byte) 0xaf3a, (byte) 0x9f59, (byte) 0x8f78,
            (byte) 0x9188, (byte) 0x81a9, (byte) 0xb1ca, (byte) 0xa1eb, (byte) 0xd10c, (byte) 0xc12d, (byte) 0xf14e, (byte) 0xe16f,
            (byte)  0x1080,(byte) 0x00a1, (byte) 0x30c2, (byte) 0x20e3, (byte) 0x5004, (byte)  0x4025,(byte) 0x7046, (byte) 0x6067,
            (byte)  0x83b9,(byte) 0x9398, (byte) 0xa3fb, (byte) 0xb3da, (byte) 0xc33d,(byte)  0xd31c, (byte) 0xe37f, (byte) 0xf35e,
            (byte) 0x02b1, (byte) 0x1290, (byte) 0x22f3, (byte) 0x32d2, (byte) 0x4235, (byte) 0x5214, (byte) 0x6277, (byte) 0x7256,
            (byte) 0xb5ea, (byte) 0xa5cb, (byte) 0x95a8, (byte) 0x8589, (byte) 0xf56e, (byte) 0xe54f, (byte) 0xd52c, (byte) 0xc50d,
            (byte) 0x34e2, (byte) 0x24c3, (byte) 0x14a0, (byte) 0x0481, (byte) 0x7466, (byte) 0x6447, (byte) 0x5424, (byte) 0x4405,
            (byte) 0xa7db, (byte) 0xb7fa, (byte) 0x8799, (byte) 0x97b8, (byte) 0xe75f, (byte) 0xf77e, (byte) 0xc71d, (byte) 0xd73c,
            (byte) 0x26d3, (byte) 0x36f2, (byte) 0x0691, (byte) 0x16b0, (byte) 0x6657, (byte) 0x7676, (byte) 0x4615, (byte) 0x5634,
            (byte) 0xd94c, (byte) 0xc96d, (byte) 0xf90e, (byte) 0xe92f, (byte) 0x99c8, (byte) 0x89e9, (byte) 0xb98a, (byte) 0xa9ab,
            (byte) 0x5844, (byte) 0x4865, (byte) 0x7806, (byte) 0x6827, (byte) 0x18c0, (byte) 0x08e1, (byte) 0x3882, (byte) 0x28a3,
            (byte) 0xcb7d, (byte) 0xdb5c, (byte) 0xeb3f, (byte) 0xfb1e, (byte) 0x8bf9, (byte) 0x9bd8, (byte) 0xabbb, (byte) 0xbb9a,
            (byte) 0x4a75, (byte) 0x5a54, (byte) 0x6a37, (byte) 0x7a16, (byte) 0x0af1, (byte) 0x1ad0, (byte) 0x2ab3, (byte) 0x3a92,
            (byte) 0xfd2e, (byte) 0xed0f, (byte) 0xdd6c, (byte) 0xcd4d, (byte) 0xbdaa, (byte) 0xad8b, (byte) 0x9de8, (byte) 0x8dc9,
            (byte) 0x7c26, (byte) 0x6c07, (byte) 0x5c64, (byte) 0x4c45, (byte) 0x3ca2, (byte) 0x2c83, (byte)  0x1ce0,(byte) 0x0cc1,
            (byte) 0xef1f, (byte) 0xff3e,(byte)  0xcf5d, (byte) 0xdf7c, (byte) 0xaf9b, (byte) 0xbfba, (byte) 0x8fd9, (byte) 0x9ff8,
            (byte) 0x6e17, (byte) 0x7e36, (byte) 0x4e55, (byte) 0x5e74, (byte) 0x2e93, (byte) 0x3eb2, (byte) 0x0ed1, (byte) 0x1ef0
    };
    /**
     * 计算CRC16校验
     *
     * @param data
     *            需要计算的数组
     * @return CRC16校验值
     */
    public static int calcCrc16(byte[] data) {
        return calcCrc16(data, 0, data.length);
    }

    /**
     * 计算CRC16校验
     *
     * @param data
     *            需要计算的数组
     * @param offset
     *            起始位置
     * @param len
     *            长度
     * @return CRC16校验值
     */
    public static int calcCrc16(byte[] data, int offset, int len) {
        return calcCrc16(data, offset, len, 0xffff);
    }

    /**
     * 计算CRC16校验
     *
     * @param data
     *            需要计算的数组
     * @param offset
     *            起始位置
     * @param len
     *            长度
     * @param preval
     *            之前的校验值
     * @return CRC16校验值
     */
    public static int calcCrc16(byte[] data, int offset, int len, int preval) {
        int ucCRCHi = (preval & 0xff00) >> 8;
        int ucCRCLo = preval & 0x00ff;
        int iIndex;
        for (int i = 0; i < len; ++i) {
            iIndex = (ucCRCLo ^ data[offset + i]) & 0x00ff;
            ucCRCLo = ucCRCHi ^ crc16_tab_h[iIndex];
            ucCRCHi = crc16_tab_l[iIndex];

        }
        return ((ucCRCHi & 0x00ff) << 8) | (ucCRCLo & 0x00ff) & 0xffff;
    }

    // 测试
    public static void main(String[] args) {
        // 0x02 05 00 03 FF 00 , crc16=7C 09
        int crc = CRC16.calcCrc16(new byte[] { 0x02, 0x05, 0x00, 0x03, (byte) 0xb3da, 0x00 });
        System.out.println(String.format("0x%04x", crc));

    }

}
